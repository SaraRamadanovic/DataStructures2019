import java.util.Stack;
public class StackOfStrings {	
	public static void main(String[] args) {
		Stack<String> operands = new Stack<String>();
		Stack<Double> values = new Stack<Double>();
		String StdIn = "( 10 + ( ( 2 + 3 ) * ( 4 * 5 ) ) )";

		String[] varr = StdIn.split(" ");

		for (String s : varr) {
			if (s.equals("("))
				continue;
			else if (s.equals("+"))
				operands.push(s);
			else if (s.equals("-"))
				operands.push(s);
			else if (s.equals("*"))
				operands.push(s);
			else if (s.equals("/"))
				operands.push(s);
			else if (s.equals("sqrt"))
				operands.push(s);
			else if (s.equals(")")) {
				double v = values.pop();
				if (operands.equals("+"))
					v = values.pop() + v;
				else if (operands.equals("-"))
					v = values.pop() - v;
				else if (operands.equals("*"))
					v = values.pop() * v;
				else if (operands.equals("/"))
					v = values.pop() / v;
				else if (operands.equals("sqrt"))
					v = Math.sqrt(v);
				values.push(v);
			} else
				values.push(Double.parseDouble(s));
		}
		System.out.println(values.pop());
	}
}
